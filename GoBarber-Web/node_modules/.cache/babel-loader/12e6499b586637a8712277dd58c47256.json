{"ast":null,"code":"var _jsxFileName = \"/home/gusta/workspace/GitGoBarber/GoBarber-Web/src/pages/Profile/index.tsx\";\n// Imports\nimport React, { useCallback, useRef } from 'react';\nimport { FiMail, FiLock, FiUser } from 'react-icons/fi';\nimport { Form } from '@unform/web';\nimport * as Yup from 'yup';\nimport { useHistory } from 'react-router-dom';\nimport api from '../../services/api';\nimport { Container, Content } from './styles';\nimport Input from '../../components/input';\nimport Button from '../../components/button';\nimport { useToast } from '../../hooks/toast';\nimport getValidationErrors from '../../utils/getValidationErros'; // Interfaces\n\n// Aplication\nconst Profile = () => {\n  const formRef = useRef(null);\n  const {\n    addToast\n  } = useToast();\n  const history = useHistory();\n  const handleSubmit = useCallback(async data => {\n    try {\n      var _formRef$current;\n\n      (_formRef$current = formRef.current) === null || _formRef$current === void 0 ? void 0 : _formRef$current.setErrors({});\n      const schema = Yup.object().shape({\n        name: Yup.string().required('Nome obrigatório'),\n        email: Yup.string().required('E-mail obrigatório').email('Digite um e-mail valido'),\n        password: Yup.string().min(6, 'No minimo 6 digitos')\n      });\n      await api.post('/users', data);\n      addToast({\n        type: 'success',\n        title: 'Cadastro realizado com sucesso',\n        description: ' Você já pode faze seu Logon no GoBarber'\n      });\n      history.push('/');\n      await schema.validate(data, {\n        abortEarly: false\n      });\n    } catch (err) {\n      var _formRef$current3;\n\n      if (err instanceof Yup.ValidationError) {\n        var _formRef$current2;\n\n        const errors = getValidationErrors(err);\n        (_formRef$current2 = formRef.current) === null || _formRef$current2 === void 0 ? void 0 : _formRef$current2.setErrors(errors);\n        return;\n      }\n\n      addToast({\n        type: 'error',\n        title: 'Erro no Cadastro',\n        description: 'Ocorreu um erro ao fazer cadastro, insira os dados corretamente'\n      });\n      const errors = getValidationErrors(err);\n      (_formRef$current3 = formRef.current) === null || _formRef$current3 === void 0 ? void 0 : _formRef$current3.setErrors(errors);\n    }\n  }, [addToast, history]);\n  return /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Content, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    ref: formRef,\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 11\n    }\n  }, \"Meu Perfil\"), /*#__PURE__*/React.createElement(Input, {\n    name: \"name\",\n    icon: FiUser,\n    placeholder: \"Nome\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    name: \"email\",\n    icon: FiMail,\n    placeholder: \"E-mail\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    name: \"password\",\n    icon: FiLock,\n    type: \"password\",\n    placeholder: \"Senha\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 11\n    }\n  }, \"Confirmar Mudan\\xE7as\"))));\n};\n\nexport default Profile;","map":{"version":3,"sources":["/home/gusta/workspace/GitGoBarber/GoBarber-Web/src/pages/Profile/index.tsx"],"names":["React","useCallback","useRef","FiMail","FiLock","FiUser","Form","Yup","useHistory","api","Container","Content","Input","Button","useToast","getValidationErrors","Profile","formRef","addToast","history","handleSubmit","data","current","setErrors","schema","object","shape","name","string","required","email","password","min","post","type","title","description","push","validate","abortEarly","err","ValidationError","errors"],"mappings":";AAAA;AACA,OAAOA,KAAP,IAAgBC,WAAhB,EAA6BC,MAA7B,QAA2C,OAA3C;AACA,SAAsBC,MAAtB,EAA8BC,MAA9B,EAAsCC,MAAtC,QAAoD,gBAApD;AACA,SAASC,IAAT,QAAqB,aAArB;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;AACA,SAAeC,UAAf,QAAiC,kBAAjC;AAEA,OAAOC,GAAP,MAAgB,oBAAhB;AAEA,SAASC,SAAT,EAAoBC,OAApB,QAAmC,UAAnC;AAEA,OAAOC,KAAP,MAAkB,wBAAlB;AACA,OAAOC,MAAP,MAAmB,yBAAnB;AAEA,SAASC,QAAT,QAAyB,mBAAzB;AAEA,OAAOC,mBAAP,MAAgC,gCAAhC,C,CAEA;;AAQA;AACA,MAAMC,OAAiB,GAAG,MAAM;AAC9B,QAAMC,OAAO,GAAGf,MAAM,CAAc,IAAd,CAAtB;AACA,QAAM;AAAEgB,IAAAA;AAAF,MAAeJ,QAAQ,EAA7B;AACA,QAAMK,OAAO,GAAGX,UAAU,EAA1B;AAEA,QAAMY,YAAY,GAAGnB,WAAW,CAC9B,MAAOoB,IAAP,IAAiC;AAC/B,QAAI;AAAA;;AACF,0BAAAJ,OAAO,CAACK,OAAR,sEAAiBC,SAAjB,CAA2B,EAA3B;AAEA,YAAMC,MAAM,GAAGjB,GAAG,CAACkB,MAAJ,GAAaC,KAAb,CAAmB;AAChCC,QAAAA,IAAI,EAAEpB,GAAG,CAACqB,MAAJ,GAAaC,QAAb,CAAsB,kBAAtB,CAD0B;AAEhCC,QAAAA,KAAK,EAAEvB,GAAG,CAACqB,MAAJ,GACJC,QADI,CACK,oBADL,EAEJC,KAFI,CAEE,yBAFF,CAFyB;AAKhCC,QAAAA,QAAQ,EAAExB,GAAG,CAACqB,MAAJ,GAAaI,GAAb,CAAiB,CAAjB,EAAoB,qBAApB;AALsB,OAAnB,CAAf;AAQA,YAAMvB,GAAG,CAACwB,IAAJ,CAAS,QAAT,EAAmBZ,IAAnB,CAAN;AACAH,MAAAA,QAAQ,CAAC;AACPgB,QAAAA,IAAI,EAAE,SADC;AAEPC,QAAAA,KAAK,EAAE,gCAFA;AAGPC,QAAAA,WAAW,EAAE;AAHN,OAAD,CAAR;AAMAjB,MAAAA,OAAO,CAACkB,IAAR,CAAa,GAAb;AAEA,YAAMb,MAAM,CAACc,QAAP,CAAgBjB,IAAhB,EAAsB;AAAEkB,QAAAA,UAAU,EAAE;AAAd,OAAtB,CAAN;AACD,KArBD,CAqBE,OAAOC,GAAP,EAAY;AAAA;;AACZ,UAAIA,GAAG,YAAYjC,GAAG,CAACkC,eAAvB,EAAwC;AAAA;;AACtC,cAAMC,MAAM,GAAG3B,mBAAmB,CAACyB,GAAD,CAAlC;AAEA,6BAAAvB,OAAO,CAACK,OAAR,wEAAiBC,SAAjB,CAA2BmB,MAA3B;AAEA;AACD;;AACDxB,MAAAA,QAAQ,CAAC;AACPgB,QAAAA,IAAI,EAAE,OADC;AAEPC,QAAAA,KAAK,EAAE,kBAFA;AAGPC,QAAAA,WAAW,EACT;AAJK,OAAD,CAAR;AAMA,YAAMM,MAAM,GAAG3B,mBAAmB,CAACyB,GAAD,CAAlC;AAEA,2BAAAvB,OAAO,CAACK,OAAR,wEAAiBC,SAAjB,CAA2BmB,MAA3B;AACD;AACF,GAzC6B,EA0C9B,CAACxB,QAAD,EAAWC,OAAX,CA1C8B,CAAhC;AA6CA,sBACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AAAM,IAAA,GAAG,EAAEF,OAAX;AAAoB,IAAA,QAAQ,EAAEG,YAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,IAAI,EAAEf,MAAzB;AAAiC,IAAA,WAAW,EAAC,MAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,eAGE,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,OAAZ;AAAoB,IAAA,IAAI,EAAEF,MAA1B;AAAkC,IAAA,WAAW,EAAC,QAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,eAIE,oBAAC,KAAD;AACE,IAAA,IAAI,EAAC,UADP;AAEE,IAAA,IAAI,EAAEC,MAFR;AAGE,IAAA,IAAI,EAAC,UAHP;AAIE,IAAA,WAAW,EAAC,OAJd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,eAUE,oBAAC,MAAD;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAVF,CADF,CADF,CADF;AAkBD,CApED;;AAsEA,eAAeY,OAAf","sourcesContent":["// Imports\nimport React, { useCallback, useRef } from 'react';\nimport { FiArrowLeft, FiMail, FiLock, FiUser } from 'react-icons/fi';\nimport { Form } from '@unform/web';\nimport * as Yup from 'yup';\nimport { Link, useHistory } from 'react-router-dom';\nimport { FormHandles } from '@unform/core';\nimport api from '../../services/api';\n\nimport { Container, Content } from './styles';\n\nimport Input from '../../components/input';\nimport Button from '../../components/button';\n\nimport { useToast } from '../../hooks/toast';\n\nimport getValidationErrors from '../../utils/getValidationErros';\n\n// Interfaces\n\ninterface ProfileFormData {\n  name: string;\n  email: string;\n  password: string;\n}\n\n// Aplication\nconst Profile: React.FC = () => {\n  const formRef = useRef<FormHandles>(null);\n  const { addToast } = useToast();\n  const history = useHistory();\n\n  const handleSubmit = useCallback(\n    async (data: ProfileFormData) => {\n      try {\n        formRef.current?.setErrors({});\n\n        const schema = Yup.object().shape({\n          name: Yup.string().required('Nome obrigatório'),\n          email: Yup.string()\n            .required('E-mail obrigatório')\n            .email('Digite um e-mail valido'),\n          password: Yup.string().min(6, 'No minimo 6 digitos'),\n        });\n\n        await api.post('/users', data);\n        addToast({\n          type: 'success',\n          title: 'Cadastro realizado com sucesso',\n          description: ' Você já pode faze seu Logon no GoBarber',\n        });\n\n        history.push('/');\n\n        await schema.validate(data, { abortEarly: false });\n      } catch (err) {\n        if (err instanceof Yup.ValidationError) {\n          const errors = getValidationErrors(err);\n\n          formRef.current?.setErrors(errors);\n\n          return;\n        }\n        addToast({\n          type: 'error',\n          title: 'Erro no Cadastro',\n          description:\n            'Ocorreu um erro ao fazer cadastro, insira os dados corretamente',\n        });\n        const errors = getValidationErrors(err);\n\n        formRef.current?.setErrors(errors);\n      }\n    },\n    [addToast, history],\n  );\n\n  return (\n    <Container>\n      <Content>\n        <Form ref={formRef} onSubmit={handleSubmit}>\n          <h1>Meu Perfil</h1>\n          <Input name=\"name\" icon={FiUser} placeholder=\"Nome\" />\n          <Input name=\"email\" icon={FiMail} placeholder=\"E-mail\" />\n          <Input\n            name=\"password\"\n            icon={FiLock}\n            type=\"password\"\n            placeholder=\"Senha\"\n          />\n          <Button type=\"submit\">Confirmar Mudanças</Button>\n        </Form>\n      </Content>\n    </Container>\n  );\n};\n\nexport default Profile;\n"]},"metadata":{},"sourceType":"module"}