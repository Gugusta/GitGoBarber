{"ast":null,"code":"var _jsxFileName = \"/home/gusta/workspace/GitGoBarber/GoBarber-Web/src/pages/ForgotPassword/index.tsx\";\nimport React, { useCallback, useRef, useState } from 'react';\nimport * as Yup from 'yup';\nimport { Link } from 'react-router-dom';\nimport { Form } from '@unform/web';\nimport { FiLogIn, FiMail } from 'react-icons/fi';\nimport { Container, Content, Background, AnimationContainer } from './styles';\nimport logoImg from \"../../assets/logo.svg\";\nimport Input from '../../components/input';\nimport Button from '../../components/button';\nimport { useToast } from '../../hooks/toast';\nimport getValidationErrors from '../../utils/getValidationErros';\nimport api from '../../services/api';\n\nconst ForgotPassword = () => {\n  const [loading, setLoading] = useState(false);\n  const formRef = useRef(null);\n  const {\n    addToast\n  } = useToast();\n  const handleSubmit = useCallback(async data => {\n    try {\n      var _formRef$current;\n\n      setLoading(true);\n      (_formRef$current = formRef.current) === null || _formRef$current === void 0 ? void 0 : _formRef$current.setErrors({});\n      const schema = Yup.object().shape({\n        email: Yup.string().required('E-mail obrigatório').email('Digite um e-mail valido')\n      });\n      await schema.validate(data, {\n        abortEarly: false\n      });\n      await api.post('/password/forgot', {\n        email: data.email\n      });\n      addToast({\n        type: 'success',\n        title: 'E-mail de recuperação enviado.',\n        description: 'Enviamos um e-mail para você redefinir sua senha, cheque sua caixa de entrada.'\n      });\n    } catch (err) {\n      if (err instanceof Yup.ValidationError) {\n        var _formRef$current2;\n\n        const errors = getValidationErrors(err);\n        (_formRef$current2 = formRef.current) === null || _formRef$current2 === void 0 ? void 0 : _formRef$current2.setErrors(errors);\n        return;\n      }\n\n      addToast({\n        type: 'error',\n        title: 'Erro na Recuperação de Senha',\n        description: 'Ocorreu um erro ao tentar realizar a recuperação de senham tente novamente.'\n      });\n    } finally {\n      setLoading(false);\n    }\n  }, [addToast]);\n  return /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Content, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(AnimationContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: logoImg,\n    alt: \"Logo GoBarber\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Form, {\n    ref: formRef,\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }\n  }, \"Recuperar Senha\"), /*#__PURE__*/React.createElement(Input, {\n    name: \"email\",\n    icon: FiMail,\n    placeholder: \"E-mail\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }\n  }, \"Recuperar\")), /*#__PURE__*/React.createElement(Link, {\n    to: \"/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(FiLogIn, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }\n  }), \"Voltar ao Login\"))), /*#__PURE__*/React.createElement(Background, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default ForgotPassword;","map":{"version":3,"sources":["/home/gusta/workspace/GitGoBarber/GoBarber-Web/src/pages/ForgotPassword/index.tsx"],"names":["React","useCallback","useRef","useState","Yup","Link","Form","FiLogIn","FiMail","Container","Content","Background","AnimationContainer","Input","Button","useToast","getValidationErrors","api","ForgotPassword","loading","setLoading","formRef","addToast","handleSubmit","data","current","setErrors","schema","object","shape","email","string","required","validate","abortEarly","post","type","title","description","err","ValidationError","errors","logoImg"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,WAAhB,EAA6BC,MAA7B,EAAqCC,QAArC,QAAqD,OAArD;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;AACA,SAASC,IAAT,QAAqB,kBAArB;AAEA,SAASC,IAAT,QAAqB,aAArB;AAGA,SAASC,OAAT,EAAkBC,MAAlB,QAAwC,gBAAxC;AACA,SAASC,SAAT,EAAoBC,OAApB,EAA6BC,UAA7B,EAAyCC,kBAAzC,QAAmE,UAAnE;;AAIA,OAAOC,KAAP,MAAkB,wBAAlB;AACA,OAAOC,MAAP,MAAmB,yBAAnB;AAGA,SAASC,QAAT,QAAyB,mBAAzB;AAEA,OAAOC,mBAAP,MAAgC,gCAAhC;AACA,OAAOC,GAAP,MAAgB,oBAAhB;;AAOA,MAAMC,cAAwB,GAAG,MAAM;AACrC,QAAK,CAACC,OAAD,EAAUC,UAAV,IAAwBjB,QAAQ,CAAC,KAAD,CAArC;AAEA,QAAMkB,OAAO,GAAGnB,MAAM,CAAc,IAAd,CAAtB;AAEA,QAAM;AAAEoB,IAAAA;AAAF,MAAeP,QAAQ,EAA7B;AAEA,QAAMQ,YAAY,GAAGtB,WAAW,CAC9B,MAAOuB,IAAP,IAAwC;AACtC,QAAI;AAAA;;AAEFJ,MAAAA,UAAU,CAAC,IAAD,CAAV;AACA,0BAAAC,OAAO,CAACI,OAAR,sEAAiBC,SAAjB,CAA2B,EAA3B;AAEA,YAAMC,MAAM,GAAGvB,GAAG,CAACwB,MAAJ,GAAaC,KAAb,CAAmB;AAChCC,QAAAA,KAAK,EAAE1B,GAAG,CAAC2B,MAAJ,GACJC,QADI,CACK,oBADL,EAEJF,KAFI,CAEE,yBAFF;AADyB,OAAnB,CAAf;AAOA,YAAMH,MAAM,CAACM,QAAP,CAAgBT,IAAhB,EAAsB;AAAEU,QAAAA,UAAU,EAAE;AAAd,OAAtB,CAAN;AAEA,YAAMjB,GAAG,CAACkB,IAAJ,CAAS,kBAAT,EAA6B;AACjCL,QAAAA,KAAK,EAAEN,IAAI,CAACM;AADqB,OAA7B,CAAN;AAIAR,MAAAA,QAAQ,CAAC;AACPc,QAAAA,IAAI,EAAE,SADC;AAEPC,QAAAA,KAAK,EAAE,gCAFA;AAGPC,QAAAA,WAAW,EAAE;AAHN,OAAD,CAAR;AAMD,KAxBD,CAwBE,OAAOC,GAAP,EAAY;AACZ,UAAIA,GAAG,YAAYnC,GAAG,CAACoC,eAAvB,EAAwC;AAAA;;AACtC,cAAMC,MAAM,GAAGzB,mBAAmB,CAACuB,GAAD,CAAlC;AAEA,6BAAAlB,OAAO,CAACI,OAAR,wEAAiBC,SAAjB,CAA2Be,MAA3B;AAEA;AACD;;AACDnB,MAAAA,QAAQ,CAAC;AACPc,QAAAA,IAAI,EAAE,OADC;AAEPC,QAAAA,KAAK,EAAE,8BAFA;AAGPC,QAAAA,WAAW,EAAE;AAHN,OAAD,CAAR;AAKD,KArCD,SAqCQ;AACNlB,MAAAA,UAAU,CAAC,KAAD,CAAV;AACD;AACF,GA1C6B,EA2C9B,CAAEE,QAAF,CA3C8B,CAAhC;AA8CA,sBACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,kBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,GAAG,EAAEoB,OAAV;AAAmB,IAAA,GAAG,EAAC,eAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAGE,oBAAC,IAAD;AAAM,IAAA,GAAG,EAAErB,OAAX;AAAoB,IAAA,QAAQ,EAAEE,YAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADF,eAEE,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,OAAZ;AAAoB,IAAA,IAAI,EAAEf,MAA1B;AAAkC,IAAA,WAAW,EAAC,QAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,eAIE,oBAAC,MAAD;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAJF,CAHF,eAWE,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAC,GAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,oBAXF,CADF,CADF,eAoBE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IApBF,CADF;AAwBD,CA7ED;;AA+EA,eAAeU,cAAf","sourcesContent":["import React, { useCallback, useRef, useState } from 'react';\nimport * as Yup from 'yup';\nimport { Link } from 'react-router-dom';\n\nimport { Form } from '@unform/web';\nimport { FormHandles } from '@unform/core';\n\nimport { FiLogIn, FiMail, FiLock } from 'react-icons/fi';\nimport { Container, Content, Background, AnimationContainer } from './styles';\n\nimport logoImg from '../../assets/logo.svg';\n\nimport Input from '../../components/input';\nimport Button from '../../components/button';\n\n\nimport { useToast } from '../../hooks/toast';\n\nimport getValidationErrors from '../../utils/getValidationErros';\nimport api from '../../services/api';\n\ninterface ForgotPasswordFormData {\n  email: string;\n  password: string;\n}\n\nconst ForgotPassword: React.FC = () => {\n  const[loading, setLoading] = useState(false)\n\n  const formRef = useRef<FormHandles>(null);\n\n  const { addToast } = useToast();\n\n  const handleSubmit = useCallback(\n    async (data: ForgotPasswordFormData) => {\n      try {\n\n        setLoading(true);\n        formRef.current?.setErrors({});\n\n        const schema = Yup.object().shape({\n          email: Yup.string()\n            .required('E-mail obrigatório')\n            .email('Digite um e-mail valido'),\n        \n        });\n\n        await schema.validate(data, { abortEarly: false });\n\n        await api.post('/password/forgot', {\n          email: data.email,\n        });\n\n        addToast({ \n          type: 'success',\n          title: 'E-mail de recuperação enviado.', \n          description: 'Enviamos um e-mail para você redefinir sua senha, cheque sua caixa de entrada.',\n        })\n\n      } catch (err) {\n        if (err instanceof Yup.ValidationError) {\n          const errors = getValidationErrors(err);\n\n          formRef.current?.setErrors(errors);\n\n          return;\n        }\n        addToast({\n          type: 'error',\n          title: 'Erro na Recuperação de Senha',\n          description: 'Ocorreu um erro ao tentar realizar a recuperação de senham tente novamente.',\n        });\n      }finally{\n        setLoading(false)\n      }\n    },\n    [ addToast],\n  );\n\n  return (\n    <Container>\n      <Content>\n        <AnimationContainer>\n          <img src={logoImg} alt=\"Logo GoBarber\" />\n\n          <Form ref={formRef} onSubmit={handleSubmit}>\n            <h1>Recuperar Senha</h1>\n            <Input name=\"email\" icon={FiMail} placeholder=\"E-mail\" />\n\n            <Button type=\"submit\">Recuperar</Button>\n            \n          </Form>\n\n          <Link to=\"/\">\n            <FiLogIn />\n            Voltar ao Login\n          </Link>\n        </AnimationContainer>\n      </Content>\n\n      <Background />\n    </Container>\n  );\n};\n\nexport default ForgotPassword;\n"]},"metadata":{},"sourceType":"module"}