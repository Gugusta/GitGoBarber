{"ast":null,"code":"var _jsxFileName = \"/home/gusta/workspace/GitGoBarber/GoBarber-Web/src/pages/Profile/index.tsx\";\n// Imports\nimport React, { useCallback, useRef } from 'react';\nimport { FiMail, FiLock, FiUser, FiCamera, FiArrowLeft } from 'react-icons/fi';\nimport { Form } from '@unform/web';\nimport * as Yup from 'yup';\nimport { useHistory, Link } from 'react-router-dom';\nimport api from '../../services/api';\nimport { Container, Content, AvatarInput } from './styles';\nimport Input from '../../components/input';\nimport Button from '../../components/button';\nimport { useToast } from '../../hooks/toast';\nimport getValidationErrors from '../../utils/getValidationErros';\nimport { useAuth } from '../../hooks/auth'; // Interfaces\n\n// Aplication\nconst Profile = () => {\n  const formRef = useRef(null);\n  const {\n    addToast\n  } = useToast();\n  const history = useHistory();\n  const {\n    user,\n    updateUser\n  } = useAuth();\n  const handleAvatarChance = useCallback(e => {\n    if (e.target.files) {\n      const data = new FormData();\n      data.append('avatar', e.target.files[0]);\n      api.patch('/users/avatar', data).then(response => {\n        updateUser(response.data);\n        addToast({\n          type: 'success',\n          title: 'Avatar atualizado!'\n        });\n      });\n    }\n  }, [addToast, updateUser]);\n  const handleSubmit = useCallback(async data => {\n    try {\n      var _formRef$current;\n\n      (_formRef$current = formRef.current) === null || _formRef$current === void 0 ? void 0 : _formRef$current.setErrors({});\n      const schema = Yup.object().shape({\n        name: Yup.string().required('Nome obrigatório'),\n        email: Yup.string().required('E-mail obrigatório').email('Digite um e-mail valido'),\n        old_password: Yup.string(),\n        password: Yup.string().when('old_password', {\n          is: val => !!val.length,\n          then: Yup.string().required('Campo Obrigatório'),\n          otherwise: Yup.string\n        }),\n        password_confirmation: Yup.string().when('old_password', {\n          is: val => !!val.length,\n          then: Yup.string().required('Campo Obrigatório'),\n          otherwise: Yup.string\n        }).oneOf([Yup.ref('password'), null], 'Confirmação incorreta')\n      });\n      await api.put('/profile', data);\n      history.push('dashboard');\n      addToast({\n        type: 'success',\n        title: 'Perfil atualizado com sucesso',\n        description: 'Suas informações de Perfil esntão atualizadas!'\n      });\n      await schema.validate(data, {\n        abortEarly: false\n      });\n    } catch (err) {\n      var _formRef$current3;\n\n      if (err instanceof Yup.ValidationError) {\n        var _formRef$current2;\n\n        const errors = getValidationErrors(err);\n        (_formRef$current2 = formRef.current) === null || _formRef$current2 === void 0 ? void 0 : _formRef$current2.setErrors(errors);\n        return;\n      }\n\n      addToast({\n        type: 'error',\n        title: 'Erro na atualização',\n        description: 'Ocorreu um erro ao atualizar seu cadastro!'\n      });\n      const errors = getValidationErrors(err);\n      (_formRef$current3 = formRef.current) === null || _formRef$current3 === void 0 ? void 0 : _formRef$current3.setErrors(errors);\n    }\n  }, [addToast, history]);\n  return /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"header\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"/dashboard\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(FiArrowLeft, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 13\n    }\n  })))), /*#__PURE__*/React.createElement(Content, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    ref: formRef,\n    initialData: {\n      name: user.name,\n      email: user.email\n    },\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(AvatarInput, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: user.avatar_url,\n    alt: user.name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"avatar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(FiCamera, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"file\",\n    id: \"avatar\",\n    onChange: handleAvatarChance,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 15\n    }\n  }))), /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 11\n    }\n  }, \"Meu Perfil\"), /*#__PURE__*/React.createElement(Input, {\n    name: \"name\",\n    icon: FiUser,\n    placeholder: \"Nome\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    name: \"email\",\n    icon: FiMail,\n    placeholder: \"E-mail\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    containerStyle: {\n      marginTop: 24\n    },\n    name: \"old_password\",\n    icon: FiLock,\n    type: \"password\",\n    placeholder: \"Senha Atual\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    name: \"password\",\n    icon: FiLock,\n    type: \"password\",\n    placeholder: \"Nova Senha\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    name: \"password_confirmation\",\n    icon: FiLock,\n    type: \"password\",\n    placeholder: \"Confirmar Senha\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 11\n    }\n  }, \"Confirmar Mudan\\xE7as\"))));\n};\n\nexport default Profile;","map":{"version":3,"sources":["/home/gusta/workspace/GitGoBarber/GoBarber-Web/src/pages/Profile/index.tsx"],"names":["React","useCallback","useRef","FiMail","FiLock","FiUser","FiCamera","FiArrowLeft","Form","Yup","useHistory","Link","api","Container","Content","AvatarInput","Input","Button","useToast","getValidationErrors","useAuth","Profile","formRef","addToast","history","user","updateUser","handleAvatarChance","e","target","files","data","FormData","append","patch","then","response","type","title","handleSubmit","current","setErrors","schema","object","shape","name","string","required","email","old_password","password","when","is","val","length","otherwise","password_confirmation","oneOf","ref","put","push","description","validate","abortEarly","err","ValidationError","errors","avatar_url","marginTop"],"mappings":"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","sourcesContent":["// Imports\nimport React, { useCallback, useRef, ChangeEvent } from 'react';\nimport { FiMail, FiLock, FiUser, FiCamera, FiArrowLeft } from 'react-icons/fi';\nimport { Form } from '@unform/web';\nimport * as Yup from 'yup';\nimport { useHistory, Link } from 'react-router-dom';\nimport { FormHandles } from '@unform/core';\nimport api from '../../services/api';\n\nimport { Container, Content, AvatarInput } from './styles';\n\nimport Input from '../../components/input';\nimport Button from '../../components/button';\n\nimport { useToast } from '../../hooks/toast';\n\nimport getValidationErrors from '../../utils/getValidationErros';\nimport { useAuth } from '../../hooks/auth';\n\n// Interfaces\n\ninterface ProfileFormData {\n  name: string;\n  email: string;\n  old_password: string;\n  password: string;\n  password_confirmation: string;\n}\n\n// Aplication\nconst Profile: React.FC = () => {\n  const formRef = useRef<FormHandles>(null);\n  const { addToast } = useToast();\n  const history = useHistory();\n\n  const { user, updateUser } = useAuth();\n\n  const handleAvatarChance = useCallback(\n    (e: ChangeEvent<HTMLInputElement>) => {\n      if (e.target.files) {\n        const data = new FormData();\n\n        data.append('avatar', e.target.files[0]);\n\n        api.patch('/users/avatar', data).then((response) => {\n          updateUser(response.data);\n          addToast({\n            type: 'success',\n            title: 'Avatar atualizado!',\n          });\n        });\n      }\n    },\n    [addToast, updateUser],\n  );\n\n  const handleSubmit = useCallback(\n    async (data: ProfileFormData) => {\n      try {\n        formRef.current?.setErrors({});\n\n        const schema = Yup.object().shape({\n          name: Yup.string().required('Nome obrigatório'),\n          email: Yup.string()\n            .required('E-mail obrigatório')\n            .email('Digite um e-mail valido'),\n          old_password: Yup.string(),\n          password: Yup.string().when('old_password', {\n            is: (val) => !!val.length,\n            then: Yup.string().required('Campo Obrigatório'),\n            otherwise: Yup.string,\n          }),\n          password_confirmation: Yup.string()\n            .when('old_password', {\n              is: (val) => !!val.length,\n              then: Yup.string().required('Campo Obrigatório'),\n              otherwise: Yup.string,\n            })\n            .oneOf([Yup.ref('password'), null], 'Confirmação incorreta'),\n        });\n\n        await api.put('/profile', data);\n        history.push('dashboard');\n\n        addToast({\n          type: 'success',\n          title: 'Perfil atualizado com sucesso',\n          description: 'Suas informações de Perfil esntão atualizadas!',\n        });\n\n        await schema.validate(data, { abortEarly: false });\n      } catch (err) {\n        if (err instanceof Yup.ValidationError) {\n          const errors = getValidationErrors(err);\n\n          formRef.current?.setErrors(errors);\n\n          return;\n        }\n        addToast({\n          type: 'error',\n          title: 'Erro na atualização',\n          description: 'Ocorreu um erro ao atualizar seu cadastro!',\n        });\n        const errors = getValidationErrors(err);\n\n        formRef.current?.setErrors(errors);\n      }\n    },\n    [addToast, history],\n  );\n\n  return (\n    <Container>\n      <header>\n        <div>\n          <Link to=\"/dashboard\">\n            <FiArrowLeft />\n          </Link>\n        </div>\n      </header>\n\n      <Content>\n        <Form\n          ref={formRef}\n          initialData={{\n            name: user.name,\n            email: user.email,\n          }}\n          onSubmit={handleSubmit}\n        >\n          <AvatarInput>\n            <img src={user.avatar_url} alt={user.name} />\n            <label htmlFor=\"avatar\">\n              <FiCamera />\n              <input type=\"file\" id=\"avatar\" onChange={handleAvatarChance} />\n            </label>\n          </AvatarInput>\n\n          <h1>Meu Perfil</h1>\n\n          <Input name=\"name\" icon={FiUser} placeholder=\"Nome\" />\n          <Input name=\"email\" icon={FiMail} placeholder=\"E-mail\" />\n\n          <Input\n            containerStyle={{ marginTop: 24 }}\n            name=\"old_password\"\n            icon={FiLock}\n            type=\"password\"\n            placeholder=\"Senha Atual\"\n          />\n\n          <Input\n            name=\"password\"\n            icon={FiLock}\n            type=\"password\"\n            placeholder=\"Nova Senha\"\n          />\n          <Input\n            name=\"password_confirmation\"\n            icon={FiLock}\n            type=\"password\"\n            placeholder=\"Confirmar Senha\"\n          />\n          <Button type=\"submit\">Confirmar Mudanças</Button>\n        </Form>\n      </Content>\n    </Container>\n  );\n};\n\nexport default Profile;\n"]},"metadata":{},"sourceType":"module"}