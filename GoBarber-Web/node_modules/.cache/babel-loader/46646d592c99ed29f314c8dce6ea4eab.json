{"ast":null,"code":"var _jsxFileName = \"/home/gusta/Workspace/Go-Barber/gobarber-web/src/context/AuthContext.tsx\";\n// Imports\nimport React, { createContext, useCallback, useState } from 'react';\nimport api from '../services/api'; // Interfaces\n\n// Aplication\nexport const AuthContext = createContext({});\nexport const AuthProvider = ({\n  children\n}) => {\n  const [data, setData] = useState({});\n  const signIn = useCallback(async ({\n    email,\n    password\n  }) => {\n    const response = await api.post('sessions', {\n      email,\n      password\n    });\n    const {\n      token,\n      user\n    } = response.data;\n    localStorage.setItem('@GoBarber:token', token);\n    localStorage.setItem('@GoBarber:user', JSON.stringify(user));\n  }, []);\n  return /*#__PURE__*/React.createElement(AuthContext.Provider, {\n    value: {\n      name: 'Gustavo',\n      signIn\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 5\n    }\n  }, children);\n};","map":{"version":3,"sources":["/home/gusta/Workspace/Go-Barber/gobarber-web/src/context/AuthContext.tsx"],"names":["React","createContext","useCallback","useState","api","AuthContext","AuthProvider","children","data","setData","signIn","email","password","response","post","token","user","localStorage","setItem","JSON","stringify","name"],"mappings":";AAAA;AACA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,WAA/B,EAA4CC,QAA5C,QAA4D,OAA5D;AACA,OAAOC,GAAP,MAAgB,iBAAhB,C,CAEA;;AAgBA;AACA,OAAO,MAAMC,WAAW,GAAGJ,aAAa,CACtC,EADsC,CAAjC;AAIP,OAAO,MAAMK,YAAsB,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AACtD,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBN,QAAQ,CAAY,EAAZ,CAAhC;AAEA,QAAMO,MAAM,GAAGR,WAAW,CAAC,OAAO;AAAES,IAAAA,KAAF;AAASC,IAAAA;AAAT,GAAP,KAA+B;AACxD,UAAMC,QAAQ,GAAG,MAAMT,GAAG,CAACU,IAAJ,CAAS,UAAT,EAAqB;AAC1CH,MAAAA,KAD0C;AAE1CC,MAAAA;AAF0C,KAArB,CAAvB;AAIA,UAAM;AAAEG,MAAAA,KAAF;AAASC,MAAAA;AAAT,QAAkBH,QAAQ,CAACL,IAAjC;AACAS,IAAAA,YAAY,CAACC,OAAb,CAAqB,iBAArB,EAAwCH,KAAxC;AACAE,IAAAA,YAAY,CAACC,OAAb,CAAqB,gBAArB,EAAuCC,IAAI,CAACC,SAAL,CAAeJ,IAAf,CAAvC;AACD,GARyB,EAQvB,EARuB,CAA1B;AAUA,sBACE,oBAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAE;AAAEK,MAAAA,IAAI,EAAE,SAAR;AAAmBX,MAAAA;AAAnB,KAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGH,QADH,CADF;AAKD,CAlBM","sourcesContent":["// Imports\nimport React, { createContext, useCallback, useState } from 'react';\nimport api from '../services/api';\n\n// Interfaces\ninterface SignInCredentials {\n  email: string;\n  password: string;\n}\n\ninterface AuthContextData {\n  name: string;\n  signIn(credentials: SignInCredentials): Promise<void>;\n}\n\ninterface AuthState {\n  token: string;\n  user: object;\n}\n\n// Aplication\nexport const AuthContext = createContext<AuthContextData>(\n  {} as AuthContextData,\n);\n\nexport const AuthProvider: React.FC = ({ children }) => {\n  const [data, setData] = useState<AuthState>({});\n\n  const signIn = useCallback(async ({ email, password }) => {\n    const response = await api.post('sessions', {\n      email,\n      password,\n    });\n    const { token, user } = response.data;\n    localStorage.setItem('@GoBarber:token', token);\n    localStorage.setItem('@GoBarber:user', JSON.stringify(user));\n  }, []);\n\n  return (\n    <AuthContext.Provider value={{ name: 'Gustavo', signIn }}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}