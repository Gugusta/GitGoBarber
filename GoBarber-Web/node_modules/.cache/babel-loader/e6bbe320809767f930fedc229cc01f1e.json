{"ast":null,"code":"var _jsxFileName = \"/home/gusta/Workspace/Go-Barber/gobarber-web/src/components/ToastContainer/Toast/index.tsx\";\nimport React, { useEffect } from 'react';\nimport { FiAlertCircle, FiXCircle } from 'react-icons/fi';\nimport { Container } from './style';\nimport { useToast } from '../../../hooks/toast';\n\nconst Toast = ({\n  message\n}) => {\n  const {\n    removeToast\n  } = useToast();\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      removeToast(message.id);\n    }, 3000);\n  }, [message.id]);\n  return /*#__PURE__*/React.createElement(Container, {\n    type: message.type,\n    hasDescription: !!message.description,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(FiAlertCircle, {\n    size: 20,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }\n  }, message.title), message.description && /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 33\n    }\n  }, \" \", message.description, \" \")), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => removeToast(message.id),\n    type: \"button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(FiXCircle, {\n    size: 18,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }\n  })));\n};\n\nexport default Toast;","map":{"version":3,"sources":["/home/gusta/Workspace/Go-Barber/gobarber-web/src/components/ToastContainer/Toast/index.tsx"],"names":["React","useEffect","FiAlertCircle","FiXCircle","Container","useToast","Toast","message","removeToast","timer","setTimeout","id","type","description","title"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,aAAT,EAAwBC,SAAxB,QAAyC,gBAAzC;AACA,SAASC,SAAT,QAA0B,SAA1B;AACA,SAAuBC,QAAvB,QAAuC,sBAAvC;;AAMA,MAAMC,KAA0B,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAiB;AAClD,QAAM;AAAEC,IAAAA;AAAF,MAAkBH,QAAQ,EAAhC;AAEAJ,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMQ,KAAK,GAAGC,UAAU,CAAC,MAAM;AAC7BF,MAAAA,WAAW,CAACD,OAAO,CAACI,EAAT,CAAX;AACD,KAFuB,EAErB,IAFqB,CAAxB;AAGD,GAJQ,EAIN,CAACJ,OAAO,CAACI,EAAT,CAJM,CAAT;AAKA,sBACE,oBAAC,SAAD;AAAW,IAAA,IAAI,EAAEJ,OAAO,CAACK,IAAzB;AAA+B,IAAA,cAAc,EAAE,CAAC,CAACL,OAAO,CAACM,WAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,aAAD;AAAe,IAAA,IAAI,EAAE,EAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAASN,OAAO,CAACO,KAAjB,CADF,EAEGP,OAAO,CAACM,WAAR,iBAAuB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAKN,OAAO,CAACM,WAAb,MAF1B,CAHF,eAQE;AAAQ,IAAA,OAAO,EAAE,MAAML,WAAW,CAACD,OAAO,CAACI,EAAT,CAAlC;AAAgD,IAAA,IAAI,EAAC,QAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,SAAD;AAAW,IAAA,IAAI,EAAE,EAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CARF,CADF;AAcD,CAtBD;;AAwBA,eAAeL,KAAf","sourcesContent":["import React, { useEffect } from 'react';\nimport { FiAlertCircle, FiXCircle } from 'react-icons/fi';\nimport { Container } from './style';\nimport { ToastMessage, useToast } from '../../../hooks/toast';\n\ninterface ToastPros {\n  message: ToastMessage;\n}\n\nconst Toast: React.FC<ToastPros> = ({ message }) => {\n  const { removeToast } = useToast();\n\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      removeToast(message.id);\n    }, 3000);\n  }, [message.id]);\n  return (\n    <Container type={message.type} hasDescription={!!message.description}>\n      <FiAlertCircle size={20} />\n\n      <div>\n        <strong>{message.title}</strong>\n        {message.description && <p> {message.description} </p>}\n      </div>\n\n      <button onClick={() => removeToast(message.id)} type=\"button\">\n        <FiXCircle size={18} />\n      </button>\n    </Container>\n  );\n};\n\nexport default Toast;\n"]},"metadata":{},"sourceType":"module"}