{"ast":null,"code":"var _jsxFileName = \"/home/gusta/Workspace/Go-Barber/gobarber-web/src/pages/signup/index.tsx\";\n// Imports\nimport React, { useCallback, useRef } from 'react';\nimport { FiArrowLeft, FiMail, FiLock, FiUser } from 'react-icons/fi';\nimport { Form } from '@unform/web';\nimport * as Yup from 'yup';\nimport { Link, useHistory } from 'react-router-dom';\nimport api from '../../services/api';\nimport { Container, Content, Background, AnimationContainer } from './styles';\nimport logoImg from \"../../assets/logo.svg\";\nimport Input from '../../components/input';\nimport Button from '../../components/button';\nimport { useToast } from '../../hooks/toast';\nimport getValidationErrors from '../../utils/getValidationErros'; // Interfaces\n\n// Aplication\nconst SignUp = () => {\n  const formRef = useRef(null);\n  const {\n    addToast\n  } = useToast();\n  const history = useHistory();\n  const handleSubmit = useCallback(async data => {\n    try {\n      var _formRef$current;\n\n      (_formRef$current = formRef.current) === null || _formRef$current === void 0 ? void 0 : _formRef$current.setErrors({});\n      const schema = Yup.object().shape({\n        name: Yup.string().required('Nome obrigatório'),\n        email: Yup.string().required('E-mail obrigatório').email('Digite um e-mail valido'),\n        password: Yup.string().min(6, 'No minimo 6 digitos')\n      });\n      await api.post('/users', data);\n      addToast({\n        type: 'success',\n        title: 'Cadastro realizado com sucesso',\n        description: ' Você já pode faze seu Logon no GoBarber'\n      });\n      history.push('/');\n      await schema.validate(data, {\n        abortEarly: false\n      });\n    } catch (err) {\n      var _formRef$current2;\n\n      const errors = getValidationErrors(err);\n      (_formRef$current2 = formRef.current) === null || _formRef$current2 === void 0 ? void 0 : _formRef$current2.setErrors(errors);\n    }\n\n    {\n      if (err instanceof Yup.ValidationError) {\n        var _formRef$current3;\n\n        const errors = getValidationErrors(err);\n        (_formRef$current3 = formRef.current) === null || _formRef$current3 === void 0 ? void 0 : _formRef$current3.setErrors(errors);\n        return;\n      }\n\n      addToast({\n        type: 'error',\n        title: 'Erro na Autenticacao',\n        description: 'Ocorreu um erro ao faze login, cheque suas credenciais'\n      });\n    }\n  }, []);\n  return /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Background, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Content, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(AnimationContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: logoImg,\n    alt: \"Logo GoBarber\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Form, {\n    ref: formRef,\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }\n  }, \"Fa\\xE7a seu Cadastro\"), /*#__PURE__*/React.createElement(Input, {\n    name: \"name\",\n    icon: FiUser,\n    placeholder: \"Nome\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    name: \"email\",\n    icon: FiMail,\n    placeholder: \"E-mail\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    name: \"password\",\n    icon: FiLock,\n    type: \"password\",\n    placeholder: \"Senha\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }\n  }, \"Cadastrar\")), /*#__PURE__*/React.createElement(Link, {\n    to: \"/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(FiArrowLeft, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }\n  }), \"Voltar para Logon\"))));\n};\n\nexport default SignUp;","map":{"version":3,"sources":["/home/gusta/Workspace/Go-Barber/gobarber-web/src/pages/signup/index.tsx"],"names":["React","useCallback","useRef","FiArrowLeft","FiMail","FiLock","FiUser","Form","Yup","Link","useHistory","api","Container","Content","Background","AnimationContainer","Input","Button","useToast","getValidationErrors","SignUp","formRef","addToast","history","handleSubmit","data","current","setErrors","schema","object","shape","name","string","required","email","password","min","post","type","title","description","push","validate","abortEarly","err","errors","ValidationError","logoImg"],"mappings":"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","sourcesContent":["// Imports\nimport React, { useCallback, useRef } from 'react';\nimport { FiArrowLeft, FiMail, FiLock, FiUser } from 'react-icons/fi';\nimport { Form } from '@unform/web';\nimport * as Yup from 'yup';\nimport { Link, useHistory } from 'react-router-dom';\nimport { FormHandles } from '@unform/core';\nimport api from '../../services/api';\n\nimport { Container, Content, Background, AnimationContainer } from './styles';\nimport logoImg from '../../assets/logo.svg';\n\nimport Input from '../../components/input';\nimport Button from '../../components/button';\n\nimport { useToast } from '../../hooks/toast';\n\nimport getValidationErrors from '../../utils/getValidationErros';\n\n// Interfaces\n\ninterface SignUpFormData {\n  name: string;\n  email: string;\n  password: string;\n}\n\n// Aplication\nconst SignUp: React.FC = () => {\n  const formRef = useRef<FormHandles>(null);\n  const { addToast } = useToast();\n  const history = useHistory();\n\n  const handleSubmit = useCallback(async (data: SignUpFormData) => {\n    try {\n      formRef.current?.setErrors({});\n\n      const schema = Yup.object().shape({\n        name: Yup.string().required('Nome obrigatório'),\n        email: Yup.string()\n          .required('E-mail obrigatório')\n          .email('Digite um e-mail valido'),\n        password: Yup.string().min(6, 'No minimo 6 digitos'),\n      });\n\n      await api.post('/users', data);\n      addToast({\n        type: 'success',\n        title: 'Cadastro realizado com sucesso',\n        description: ' Você já pode faze seu Logon no GoBarber',\n      });\n\n      history.push('/');\n\n      await schema.validate(data, { abortEarly: false });\n    } catch (err) {\n      const errors = getValidationErrors(err);\n\n      formRef.current?.setErrors(errors);\n    }\n    {\n      if (err instanceof Yup.ValidationError) {\n        const errors = getValidationErrors(err);\n\n        formRef.current?.setErrors(errors);\n\n        return;\n      }\n      addToast({\n        type: 'error',\n        title: 'Erro na Autenticacao',\n        description: 'Ocorreu um erro ao faze login, cheque suas credenciais',\n      });\n    }\n  }, []);\n\n  return (\n    <Container>\n      <Background />\n      <Content>\n        <AnimationContainer>\n          <img src={logoImg} alt=\"Logo GoBarber\" />\n\n          <Form ref={formRef} onSubmit={handleSubmit}>\n            <h1>Faça seu Cadastro</h1>\n            <Input name=\"name\" icon={FiUser} placeholder=\"Nome\" />\n            <Input name=\"email\" icon={FiMail} placeholder=\"E-mail\" />\n            <Input\n              name=\"password\"\n              icon={FiLock}\n              type=\"password\"\n              placeholder=\"Senha\"\n            />\n            <Button type=\"submit\">Cadastrar</Button>\n          </Form>\n\n          <Link to=\"/\">\n            <FiArrowLeft />\n            Voltar para Logon\n          </Link>\n        </AnimationContainer>\n      </Content>\n    </Container>\n  );\n};\n\nexport default SignUp;\n"]},"metadata":{},"sourceType":"module"}