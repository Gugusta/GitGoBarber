{"ast":null,"code":"var _jsxFileName = \"/Users/gustavoserao/Workspace/GitGoBarber/GoBarber-Web/src/pages/ResetPassword/index.tsx\";\nimport React, { useCallback, useRef } from 'react';\nimport * as Yup from 'yup';\nimport { Link, useHistory, useLocation } from 'react-router-dom';\nimport { Form } from '@unform/web';\nimport { FiLogIn, FiLock } from 'react-icons/fi';\nimport { Container, Content, Background, AnimationContainer } from './styles';\nimport logoImg from \"../../assets/logo.svg\";\nimport Input from '../../components/input';\nimport Button from '../../components/button';\nimport { useToast } from '../../hooks/toast';\nimport getValidationErrors from '../../utils/getValidationErros';\nimport api from '../../services/api';\n\nconst SignIn = () => {\n  const formRef = useRef(null);\n  const history = useHistory();\n  const location = useLocation();\n  const {\n    addToast\n  } = useToast();\n  const handleSubmit = useCallback(async data => {\n    try {\n      var _formRef$current;\n\n      (_formRef$current = formRef.current) === null || _formRef$current === void 0 ? void 0 : _formRef$current.setErrors({});\n      const schema = Yup.object().shape({\n        password: Yup.string().required('Senha obrigatória'),\n        password_confirmation: Yup.string().oneOf([Yup.ref('password'), null], 'Confirmação incorreta')\n      });\n      await schema.validate(data, {\n        abortEarly: false\n      });\n      const {\n        password,\n        password_confirmation\n      } = data;\n      const token = location.search.replace('?token=', '');\n\n      if (!token) {\n        throw new Error();\n      }\n\n      await api.post('/password/rest', {\n        password,\n        password_confirmation,\n        token\n      });\n      history.push('/');\n    } catch (err) {\n      if (err instanceof Yup.ValidationError) {\n        var _formRef$current2;\n\n        const errors = getValidationErrors(err);\n        (_formRef$current2 = formRef.current) === null || _formRef$current2 === void 0 ? void 0 : _formRef$current2.setErrors(errors);\n        return;\n      }\n\n      addToast({\n        type: 'error',\n        title: 'Erro na resetar senha',\n        description: 'Ocorreu um erro ao resetar sua senha. Tente novamente'\n      });\n    }\n  }, [addToast, history, location]);\n  return /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Content, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(AnimationContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: logoImg,\n    alt: \"Logo GoBarber\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Form, {\n    ref: formRef,\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }\n  }, \"Resetar Senha\"), /*#__PURE__*/React.createElement(Input, {\n    name: \"password\",\n    icon: FiLock,\n    type: \"password\",\n    placeholder: \"Nova senha\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    name: \"password_confirmation\",\n    icon: FiLock,\n    type: \"password\",\n    placeholder: \"confirma\\xE7\\xE3o de senha\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }\n  }, \"Alterar Senha\")), /*#__PURE__*/React.createElement(Link, {\n    to: \"/signin\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(FiLogIn, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }\n  }), \"Voltar ao Login\"))), /*#__PURE__*/React.createElement(Background, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default SignIn;","map":{"version":3,"sources":["/Users/gustavoserao/Workspace/GitGoBarber/GoBarber-Web/src/pages/ResetPassword/index.tsx"],"names":["React","useCallback","useRef","Yup","Link","useHistory","useLocation","Form","FiLogIn","FiLock","Container","Content","Background","AnimationContainer","Input","Button","useToast","getValidationErrors","api","SignIn","formRef","history","location","addToast","handleSubmit","data","current","setErrors","schema","object","shape","password","string","required","password_confirmation","oneOf","ref","validate","abortEarly","token","search","replace","Error","post","push","err","ValidationError","errors","type","title","description","logoImg"],"mappings":"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","sourcesContent":["import React, { useCallback, useRef } from 'react';\nimport * as Yup from 'yup';\nimport { Link, useHistory, useLocation } from 'react-router-dom';\n\nimport { Form } from '@unform/web';\nimport { FormHandles } from '@unform/core';\n\nimport { FiLogIn, FiLock } from 'react-icons/fi';\nimport { Container, Content, Background, AnimationContainer } from './styles';\n\nimport logoImg from '../../assets/logo.svg';\n\nimport Input from '../../components/input';\nimport Button from '../../components/button';\n\nimport { useToast } from '../../hooks/toast';\n\nimport getValidationErrors from '../../utils/getValidationErros';\nimport api from '../../services/api';\n\ninterface ResetPasswordFormData {\n  password: string;\n  password_confirmation: string;\n}\n\nconst SignIn: React.FC = () => {\n  const formRef = useRef<FormHandles>(null);\n\n  const history = useHistory();\n  const location = useLocation();\n\n  const { addToast } = useToast();\n\n  const handleSubmit = useCallback(\n    async (data: ResetPasswordFormData) => {\n      try {\n        formRef.current?.setErrors({});\n\n        const schema = Yup.object().shape({\n          password: Yup.string().required('Senha obrigatória'),\n          password_confirmation: Yup.string().oneOf(\n            [Yup.ref('password'), null],\n            'Confirmação incorreta',\n          ),\n        });\n\n        await schema.validate(data, { abortEarly: false });\n\n        const { password, password_confirmation } = data;\n        const token = location.search.replace('?token=', '');\n\n        if (!token) {\n          throw new Error();\n        }\n\n        await api.post('/password/rest', {\n          password,\n          password_confirmation,\n          token,\n        });\n\n        history.push('/');\n      } catch (err) {\n        if (err instanceof Yup.ValidationError) {\n          const errors = getValidationErrors(err);\n\n          formRef.current?.setErrors(errors);\n\n          return;\n        }\n        addToast({\n          type: 'error',\n          title: 'Erro na resetar senha',\n          description: 'Ocorreu um erro ao resetar sua senha. Tente novamente',\n        });\n      }\n    },\n    [addToast, history, location],\n  );\n\n  return (\n    <Container>\n      <Content>\n        <AnimationContainer>\n          <img src={logoImg} alt=\"Logo GoBarber\" />\n\n          <Form ref={formRef} onSubmit={handleSubmit}>\n            <h1>Resetar Senha</h1>\n\n            <Input\n              name=\"password\"\n              icon={FiLock}\n              type=\"password\"\n              placeholder=\"Nova senha\"\n            />\n\n            <Input\n              name=\"password_confirmation\"\n              icon={FiLock}\n              type=\"password\"\n              placeholder=\"confirmação de senha\"\n            />\n\n            <Button type=\"submit\">Alterar Senha</Button>\n          </Form>\n\n          <Link to=\"/signin\">\n            <FiLogIn />\n            Voltar ao Login\n          </Link>\n        </AnimationContainer>\n      </Content>\n\n      <Background />\n    </Container>\n  );\n};\n\nexport default SignIn;\n"]},"metadata":{},"sourceType":"module"}