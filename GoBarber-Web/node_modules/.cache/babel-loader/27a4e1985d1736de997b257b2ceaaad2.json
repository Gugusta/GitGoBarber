{"ast":null,"code":"var _jsxFileName = \"/home/gusta/Workspace/Go-Barber/gobarber-web/src/components/input/index.tsx\";\nimport React, { useEffect, useRef, useState, useCallback } from 'react';\nimport { useField } from '@unform/core';\nimport { Container } from './styles';\n\nconst Input = ({\n  name,\n  icon: Icon,\n  ...rest\n}) => {\n  const inputRef = useRef(null);\n  const [isFocused, setIsFocused] = useState(false);\n  const {\n    fieldName,\n    defaultValue,\n    error,\n    registerField\n  } = useField(name);\n  const handleInputBlur = useCallback(() => {\n    setIsFocused(false);\n  }, []);\n  useEffect(() => {\n    registerField({\n      name: fieldName,\n      ref: inputRef.current,\n      path: 'value'\n    });\n  }, [fieldName, registerField]);\n  return /*#__PURE__*/React.createElement(Container, {\n    isFocused: isFocused,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 5\n    }\n  }, Icon && /*#__PURE__*/React.createElement(Icon, {\n    size: 20,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 16\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", Object.assign({\n    onFocus: () => setIsFocused(true),\n    onBlur: handleInputBlur,\n    defaultValue: defaultValue,\n    ref: inputRef\n  }, rest, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }\n  })));\n};\n\nexport default Input;","map":{"version":3,"sources":["/home/gusta/Workspace/Go-Barber/gobarber-web/src/components/input/index.tsx"],"names":["React","useEffect","useRef","useState","useCallback","useField","Container","Input","name","icon","Icon","rest","inputRef","isFocused","setIsFocused","fieldName","defaultValue","error","registerField","handleInputBlur","ref","current","path"],"mappings":";AAAA,OAAOA,KAAP,IAEEC,SAFF,EAGEC,MAHF,EAIEC,QAJF,EAKEC,WALF,QAMO,OANP;AAQA,SAASC,QAAT,QAAyB,cAAzB;AACA,SAASC,SAAT,QAA0B,UAA1B;;AAOA,MAAMC,KAA2B,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA,IAAI,EAAEC,IAAd;AAAoB,KAAGC;AAAvB,CAAD,KAAmC;AACrE,QAAMC,QAAQ,GAAGV,MAAM,CAAC,IAAD,CAAvB;AACA,QAAM,CAACW,SAAD,EAAYC,YAAZ,IAA4BX,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM;AAAEY,IAAAA,SAAF;AAAaC,IAAAA,YAAb;AAA2BC,IAAAA,KAA3B;AAAkCC,IAAAA;AAAlC,MAAoDb,QAAQ,CAACG,IAAD,CAAlE;AAEA,QAAMW,eAAe,GAAGf,WAAW,CAAC,MAAM;AACxCU,IAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,GAFkC,EAEhC,EAFgC,CAAnC;AAIAb,EAAAA,SAAS,CAAC,MAAM;AACdiB,IAAAA,aAAa,CAAC;AACZV,MAAAA,IAAI,EAAEO,SADM;AAEZK,MAAAA,GAAG,EAAER,QAAQ,CAACS,OAFF;AAGZC,MAAAA,IAAI,EAAE;AAHM,KAAD,CAAb;AAKD,GANQ,EAMN,CAACP,SAAD,EAAYG,aAAZ,CANM,CAAT;AAQA,sBACE,oBAAC,SAAD;AAAW,IAAA,SAAS,EAAEL,SAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGH,IAAI,iBAAI,oBAAC,IAAD;AAAM,IAAA,IAAI,EAAE,EAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADX,eAEE;AACE,IAAA,OAAO,EAAE,MAAMI,YAAY,CAAC,IAAD,CAD7B;AAEE,IAAA,MAAM,EAAEK,eAFV;AAGE,IAAA,YAAY,EAAEH,YAHhB;AAIE,IAAA,GAAG,EAAEJ;AAJP,KAKMD,IALN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAFF,CADF;AAYD,CA7BD;;AA8BA,eAAeJ,KAAf","sourcesContent":["import React, {\n  InputHTMLAttributes,\n  useEffect,\n  useRef,\n  useState,\n  useCallback,\n} from 'react';\nimport { IconBaseProps } from 'react-icons';\nimport { useField } from '@unform/core';\nimport { Container } from './styles';\n\ninterface InputProps extends InputHTMLAttributes<HTMLInputElement> {\n  name: string;\n  icon?: React.ComponentType<IconBaseProps>;\n}\n\nconst Input: React.FC<InputProps> = ({ name, icon: Icon, ...rest }) => {\n  const inputRef = useRef(null);\n  const [isFocused, setIsFocused] = useState(false);\n  const { fieldName, defaultValue, error, registerField } = useField(name);\n\n  const handleInputBlur = useCallback(() => {\n    setIsFocused(false);\n  }, []);\n\n  useEffect(() => {\n    registerField({\n      name: fieldName,\n      ref: inputRef.current,\n      path: 'value',\n    });\n  }, [fieldName, registerField]);\n\n  return (\n    <Container isFocused={isFocused}>\n      {Icon && <Icon size={20} />}\n      <input\n        onFocus={() => setIsFocused(true)}\n        onBlur={handleInputBlur}\n        defaultValue={defaultValue}\n        ref={inputRef}\n        {...rest}\n      />\n    </Container>\n  );\n};\nexport default Input;\n"]},"metadata":{},"sourceType":"module"}